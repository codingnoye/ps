{
    "ps 템플릿": {
        "scope": "cpp",
        "prefix": "ps",
        "body": [
            "#include <bits/stdc++.h>",
            "#define fastio cin.tie(0)->sync_with_stdio(0)",
            "#ifdef ONLINE_JUDGE",
            "    #define endl '\\n'",
            "#endif",
            "#define all(x) x.begin(), x.end()",
            "#define sz(x) x.size()",
            "using namespace std;",
            "typedef long long ll;",
            "",
            "int main() {",
            "    fastio;",
            "    ",
            "    $0",
            "}"
        ],
        "description": "ps 기본 템플릿을 생성합니다."
    },
    "ps 심플 템플릿": {
        "scope": "cpp",
        "prefix": "pss",
        "body": [
            "#include <bits/stdc++.h>",
            "#define fastio cin.tie(0)->sync_with_stdio(0)",
            "#define endl '\\n'",
            "using namespace std;",
            "typedef long long ll;",
            "",
            "int main() {",
            "    fastio;",
            "    ",
            "    $0",
            "}"
        ],
        "description": "ps 심플 템플릿을 생성합니다."
    },
    "cpp 기본 템플릿": {
        "scope": "cpp",
        "prefix": "cpp",
        "body": [
            "#include <iostream>",
            "#include <vector>",
            "#include <algorithm>",
            "using namespace std;",
            "#define endl '\\n'",
            "",
            "int main() {",
            "    $0",
            "}"
        ],
        "description": "cpp 기본 템플릿을 생성합니다."
    },
    "좌표압축": {
        "scope": "cpp",
        "prefix": "comp",
        "body": [
            "vector<ll> comp(vector<ll>& v_origin) {",
            "    vector<ll> v(v_origin);",
            "    vector<ll> tmp(v);",
            "    sort(tmp.begin(), tmp.end());",
            "    tmp.erase(unique(tmp.begin(), tmp.end()), tmp.end());",
            "    for (auto &i: v) {",
            "        i = lower_bound(tmp.begin(), tmp.end(), i) - tmp.begin();",
            "    }",
            "    return v;",
            "}"
        ],
        "description": "좌표압축 (justicehui)"
    }
}